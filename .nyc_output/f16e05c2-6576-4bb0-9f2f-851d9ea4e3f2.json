{"/Users/james/Sites/personal/pullcraft/src/index.ts":{"path":"/Users/james/Sites/personal/pullcraft/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"16":{"start":{"line":16,"column":21},"end":{"line":16,"column":59}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":36}},"18":{"start":{"line":18,"column":22},"end":{"line":18,"column":44}},"19":{"start":{"line":19,"column":17},"end":{"line":19,"column":51}},"20":{"start":{"line":20,"column":24},"end":{"line":20,"column":48}},"21":{"start":{"line":21,"column":23},"end":{"line":21,"column":48}},"22":{"start":{"line":22,"column":19},"end":{"line":22,"column":30}},"23":{"start":{"line":23,"column":26},"end":{"line":35,"column":1}},"24":{"start":{"line":36,"column":23},"end":{"line":36,"column":27}},"25":{"start":{"line":37,"column":22},"end":{"line":37,"column":26}},"26":{"start":{"line":38,"column":23},"end":{"line":48,"column":1}},"27":{"start":{"line":49,"column":20},"end":{"line":49,"column":29}},"28":{"start":{"line":50,"column":27},"end":{"line":50,"column":36}},"29":{"start":{"line":52,"column":4},"end":{"line":52,"column":93}},"30":{"start":{"line":52,"column":75},"end":{"line":52,"column":90}},"31":{"start":{"line":57,"column":8},"end":{"line":57,"column":31}},"32":{"start":{"line":58,"column":8},"end":{"line":58,"column":39}},"33":{"start":{"line":59,"column":25},"end":{"line":59,"column":101}},"34":{"start":{"line":60,"column":23},"end":{"line":60,"column":40}},"35":{"start":{"line":61,"column":30},"end":{"line":61,"column":99}},"36":{"start":{"line":62,"column":8},"end":{"line":62,"column":58}},"37":{"start":{"line":65,"column":30},"end":{"line":74,"column":9}},"38":{"start":{"line":68,"column":36},"end":{"line":68,"column":60}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":43}},"40":{"start":{"line":82,"column":8},"end":{"line":82,"column":51}},"41":{"start":{"line":83,"column":8},"end":{"line":83,"column":53}},"42":{"start":{"line":84,"column":8},"end":{"line":84,"column":55}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":59}},"44":{"start":{"line":86,"column":8},"end":{"line":86,"column":53}},"45":{"start":{"line":87,"column":8},"end":{"line":87,"column":67}},"46":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"47":{"start":{"line":90,"column":12},"end":{"line":90,"column":64}},"48":{"start":{"line":92,"column":8},"end":{"line":92,"column":81}},"49":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"50":{"start":{"line":95,"column":12},"end":{"line":95,"column":104}},"51":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"52":{"start":{"line":98,"column":12},"end":{"line":98,"column":62}},"53":{"start":{"line":100,"column":8},"end":{"line":100,"column":171}},"54":{"start":{"line":102,"column":8},"end":{"line":102,"column":47}},"55":{"start":{"line":105,"column":8},"end":{"line":113,"column":11}},"56":{"start":{"line":105,"column":80},"end":{"line":105,"column":118}},"57":{"start":{"line":106,"column":12},"end":{"line":112,"column":13}},"58":{"start":{"line":107,"column":28},"end":{"line":107,"column":102}},"59":{"start":{"line":108,"column":16},"end":{"line":108,"column":107}},"60":{"start":{"line":111,"column":16},"end":{"line":111,"column":29}},"61":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"62":{"start":{"line":117,"column":12},"end":{"line":117,"column":60}},"63":{"start":{"line":118,"column":12},"end":{"line":118,"column":24}},"64":{"start":{"line":121,"column":12},"end":{"line":121,"column":25}},"65":{"start":{"line":125,"column":8},"end":{"line":154,"column":11}},"66":{"start":{"line":126,"column":12},"end":{"line":129,"column":13}},"67":{"start":{"line":127,"column":16},"end":{"line":127,"column":81}},"68":{"start":{"line":128,"column":16},"end":{"line":128,"column":58}},"69":{"start":{"line":130,"column":12},"end":{"line":131,"column":23}},"70":{"start":{"line":131,"column":16},"end":{"line":131,"column":23}},"71":{"start":{"line":132,"column":12},"end":{"line":153,"column":13}},"72":{"start":{"line":133,"column":31},"end":{"line":133,"column":47}},"73":{"start":{"line":134,"column":16},"end":{"line":134,"column":64}},"74":{"start":{"line":136,"column":16},"end":{"line":148,"column":17}},"75":{"start":{"line":139,"column":24},"end":{"line":139,"column":78}},"76":{"start":{"line":142,"column":24},"end":{"line":142,"column":74}},"77":{"start":{"line":145,"column":24},"end":{"line":145,"column":75}},"78":{"start":{"line":147,"column":24},"end":{"line":147,"column":56}},"79":{"start":{"line":151,"column":16},"end":{"line":151,"column":69}},"80":{"start":{"line":152,"column":16},"end":{"line":152,"column":28}},"81":{"start":{"line":157,"column":8},"end":{"line":221,"column":11}},"82":{"start":{"line":158,"column":12},"end":{"line":220,"column":13}},"83":{"start":{"line":159,"column":16},"end":{"line":159,"column":108}},"84":{"start":{"line":160,"column":16},"end":{"line":160,"column":86}},"85":{"start":{"line":161,"column":33},"end":{"line":161,"column":57}},"86":{"start":{"line":162,"column":16},"end":{"line":165,"column":17}},"87":{"start":{"line":163,"column":20},"end":{"line":163,"column":91}},"88":{"start":{"line":164,"column":20},"end":{"line":164,"column":27}},"89":{"start":{"line":166,"column":40},"end":{"line":166,"column":48}},"90":{"start":{"line":167,"column":16},"end":{"line":168,"column":28}},"91":{"start":{"line":169,"column":31},"end":{"line":169,"column":75}},"92":{"start":{"line":171,"column":16},"end":{"line":174,"column":17}},"93":{"start":{"line":172,"column":20},"end":{"line":172,"column":77}},"94":{"start":{"line":173,"column":20},"end":{"line":173,"column":27}},"95":{"start":{"line":175,"column":16},"end":{"line":183,"column":17}},"96":{"start":{"line":176,"column":20},"end":{"line":176,"column":52}},"97":{"start":{"line":179,"column":20},"end":{"line":179,"column":39}},"98":{"start":{"line":180,"column":20},"end":{"line":180,"column":58}},"99":{"start":{"line":181,"column":20},"end":{"line":181,"column":92}},"100":{"start":{"line":182,"column":20},"end":{"line":182,"column":27}},"101":{"start":{"line":184,"column":40},"end":{"line":184,"column":48}},"102":{"start":{"line":185,"column":16},"end":{"line":188,"column":17}},"103":{"start":{"line":186,"column":20},"end":{"line":186,"column":76}},"104":{"start":{"line":187,"column":20},"end":{"line":187,"column":27}},"105":{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},"106":{"start":{"line":190,"column":20},"end":{"line":190,"column":77}},"107":{"start":{"line":191,"column":20},"end":{"line":191,"column":27}},"108":{"start":{"line":193,"column":36},"end":{"line":198,"column":18}},"109":{"start":{"line":199,"column":16},"end":{"line":216,"column":17}},"110":{"start":{"line":200,"column":39},"end":{"line":200,"column":60}},"111":{"start":{"line":201,"column":20},"end":{"line":201,"column":74}},"112":{"start":{"line":202,"column":20},"end":{"line":202,"column":97}},"113":{"start":{"line":203,"column":20},"end":{"line":203,"column":107}},"114":{"start":{"line":206,"column":20},"end":{"line":206,"column":56}},"115":{"start":{"line":207,"column":37},"end":{"line":214,"column":22}},"116":{"start":{"line":215,"column":20},"end":{"line":215,"column":63}},"117":{"start":{"line":219,"column":16},"end":{"line":219,"column":69}},"118":{"start":{"line":224,"column":8},"end":{"line":237,"column":11}},"119":{"start":{"line":225,"column":12},"end":{"line":236,"column":13}},"120":{"start":{"line":226,"column":32},"end":{"line":226,"column":92}},"121":{"start":{"line":227,"column":30},"end":{"line":227,"column":79}},"122":{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},"123":{"start":{"line":229,"column":20},"end":{"line":229,"column":63}},"124":{"start":{"line":231,"column":16},"end":{"line":231,"column":75}},"125":{"start":{"line":234,"column":16},"end":{"line":234,"column":57}},"126":{"start":{"line":235,"column":16},"end":{"line":235,"column":28}},"127":{"start":{"line":240,"column":8},"end":{"line":258,"column":11}},"128":{"start":{"line":241,"column":12},"end":{"line":257,"column":13}},"129":{"start":{"line":243,"column":32},"end":{"line":251,"column":18}},"130":{"start":{"line":252,"column":16},"end":{"line":252,"column":31}},"131":{"start":{"line":255,"column":16},"end":{"line":255,"column":75}},"132":{"start":{"line":256,"column":16},"end":{"line":256,"column":28}},"133":{"start":{"line":261,"column":8},"end":{"line":278,"column":11}},"134":{"start":{"line":262,"column":12},"end":{"line":277,"column":13}},"135":{"start":{"line":264,"column":32},"end":{"line":271,"column":18}},"136":{"start":{"line":272,"column":16},"end":{"line":272,"column":31}},"137":{"start":{"line":275,"column":16},"end":{"line":275,"column":70}},"138":{"start":{"line":276,"column":16},"end":{"line":276,"column":28}},"139":{"start":{"line":281,"column":8},"end":{"line":296,"column":11}},"140":{"start":{"line":282,"column":12},"end":{"line":295,"column":13}},"141":{"start":{"line":284,"column":32},"end":{"line":289,"column":18}},"142":{"start":{"line":290,"column":16},"end":{"line":290,"column":31}},"143":{"start":{"line":293,"column":16},"end":{"line":293,"column":75}},"144":{"start":{"line":294,"column":16},"end":{"line":294,"column":28}},"145":{"start":{"line":299,"column":8},"end":{"line":318,"column":11}},"146":{"start":{"line":300,"column":12},"end":{"line":317,"column":13}},"147":{"start":{"line":301,"column":16},"end":{"line":301,"column":108}},"148":{"start":{"line":302,"column":29},"end":{"line":302,"column":74}},"149":{"start":{"line":303,"column":33},"end":{"line":303,"column":82}},"150":{"start":{"line":304,"column":34},"end":{"line":304,"column":84}},"151":{"start":{"line":305,"column":16},"end":{"line":307,"column":17}},"152":{"start":{"line":306,"column":20},"end":{"line":306,"column":78}},"153":{"start":{"line":308,"column":16},"end":{"line":309,"column":37}},"154":{"start":{"line":310,"column":36},"end":{"line":310,"column":87}},"155":{"start":{"line":312,"column":33},"end":{"line":312,"column":64}},"156":{"start":{"line":313,"column":16},"end":{"line":313,"column":32}},"157":{"start":{"line":316,"column":16},"end":{"line":316,"column":76}},"158":{"start":{"line":321,"column":24},"end":{"line":323,"column":9}},"159":{"start":{"line":322,"column":12},"end":{"line":322,"column":159}},"160":{"start":{"line":325,"column":22},"end":{"line":325,"column":62}},"161":{"start":{"line":326,"column":21},"end":{"line":326,"column":60}},"162":{"start":{"line":327,"column":8},"end":{"line":337,"column":34}},"163":{"start":{"line":340,"column":8},"end":{"line":360,"column":11}},"164":{"start":{"line":342,"column":12},"end":{"line":359,"column":13}},"165":{"start":{"line":343,"column":33},"end":{"line":354,"column":18}},"166":{"start":{"line":355,"column":16},"end":{"line":355,"column":114}},"167":{"start":{"line":358,"column":16},"end":{"line":358,"column":76}},"168":{"start":{"line":363,"column":0},"end":{"line":363,"column":30}},"169":{"start":{"line":364,"column":0},"end":{"line":364,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"filterUndefined","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":24}},"loc":{"start":{"line":51,"column":30},"end":{"line":53,"column":1}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":63},"end":{"line":52,"column":64}},"loc":{"start":{"line":52,"column":75},"end":{"line":52,"column":90}},"line":52},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":34},"end":{"line":103,"column":5}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":21},"end":{"line":68,"column":22}},"loc":{"start":{"line":68,"column":36},"end":{"line":68,"column":60}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":94},"end":{"line":114,"column":5}},"line":104},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":73},"end":{"line":105,"column":74}},"loc":{"start":{"line":105,"column":80},"end":{"line":105,"column":118}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":105,"column":137},"end":{"line":105,"column":138}},"loc":{"start":{"line":105,"column":146},"end":{"line":113,"column":9}},"line":105},"15":{"name":"(anonymous_15)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":23},"end":{"line":123,"column":5}},"line":115},"16":{"name":"(anonymous_16)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":17},"end":{"line":155,"column":5}},"line":124},"17":{"name":"(anonymous_17)","decl":{"start":{"line":125,"column":47},"end":{"line":125,"column":48}},"loc":{"start":{"line":125,"column":60},"end":{"line":154,"column":9}},"line":125},"18":{"name":"(anonymous_18)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":15},"end":{"line":222,"column":5}},"line":156},"19":{"name":"(anonymous_19)","decl":{"start":{"line":157,"column":50},"end":{"line":157,"column":51}},"loc":{"start":{"line":157,"column":107},"end":{"line":221,"column":9}},"line":157},"20":{"name":"(anonymous_20)","decl":{"start":{"line":223,"column":4},"end":{"line":223,"column":5}},"loc":{"start":{"line":223,"column":18},"end":{"line":238,"column":5}},"line":223},"21":{"name":"(anonymous_21)","decl":{"start":{"line":224,"column":47},"end":{"line":224,"column":48}},"loc":{"start":{"line":224,"column":60},"end":{"line":237,"column":9}},"line":224},"22":{"name":"(anonymous_22)","decl":{"start":{"line":239,"column":4},"end":{"line":239,"column":5}},"loc":{"start":{"line":239,"column":43},"end":{"line":259,"column":5}},"line":239},"23":{"name":"(anonymous_23)","decl":{"start":{"line":240,"column":47},"end":{"line":240,"column":48}},"loc":{"start":{"line":240,"column":60},"end":{"line":258,"column":9}},"line":240},"24":{"name":"(anonymous_24)","decl":{"start":{"line":260,"column":4},"end":{"line":260,"column":5}},"loc":{"start":{"line":260,"column":39},"end":{"line":279,"column":5}},"line":260},"25":{"name":"(anonymous_25)","decl":{"start":{"line":261,"column":47},"end":{"line":261,"column":48}},"loc":{"start":{"line":261,"column":60},"end":{"line":278,"column":9}},"line":261},"26":{"name":"(anonymous_26)","decl":{"start":{"line":280,"column":4},"end":{"line":280,"column":5}},"loc":{"start":{"line":280,"column":44},"end":{"line":297,"column":5}},"line":280},"27":{"name":"(anonymous_27)","decl":{"start":{"line":281,"column":47},"end":{"line":281,"column":48}},"loc":{"start":{"line":281,"column":60},"end":{"line":296,"column":9}},"line":281},"28":{"name":"(anonymous_28)","decl":{"start":{"line":298,"column":4},"end":{"line":298,"column":5}},"loc":{"start":{"line":298,"column":13},"end":{"line":319,"column":5}},"line":298},"29":{"name":"(anonymous_29)","decl":{"start":{"line":299,"column":50},"end":{"line":299,"column":51}},"loc":{"start":{"line":299,"column":100},"end":{"line":318,"column":9}},"line":299},"30":{"name":"(anonymous_30)","decl":{"start":{"line":320,"column":4},"end":{"line":320,"column":5}},"loc":{"start":{"line":320,"column":51},"end":{"line":338,"column":5}},"line":320},"31":{"name":"(anonymous_31)","decl":{"start":{"line":321,"column":24},"end":{"line":321,"column":25}},"loc":{"start":{"line":321,"column":38},"end":{"line":323,"column":9}},"line":321},"32":{"name":"(anonymous_32)","decl":{"start":{"line":339,"column":4},"end":{"line":339,"column":5}},"loc":{"start":{"line":339,"column":20},"end":{"line":361,"column":5}},"line":339},"33":{"name":"(anonymous_33)","decl":{"start":{"line":340,"column":47},"end":{"line":340,"column":48}},"loc":{"start":{"line":340,"column":60},"end":{"line":360,"column":9}},"line":340}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":52,"column":45},"end":{"line":52,"column":54}},"type":"binary-expr","locations":[{"start":{"line":52,"column":45},"end":{"line":52,"column":48}},{"start":{"line":52,"column":52},"end":{"line":52,"column":54}}],"line":52},"9":{"loc":{"start":{"line":61,"column":30},"end":{"line":61,"column":99}},"type":"binary-expr","locations":[{"start":{"line":61,"column":31},"end":{"line":61,"column":92}},{"start":{"line":61,"column":97},"end":{"line":61,"column":99}}],"line":61},"10":{"loc":{"start":{"line":61,"column":31},"end":{"line":61,"column":92}},"type":"cond-expr","locations":[{"start":{"line":61,"column":70},"end":{"line":61,"column":76}},{"start":{"line":61,"column":79},"end":{"line":61,"column":92}}],"line":61},"11":{"loc":{"start":{"line":61,"column":31},"end":{"line":61,"column":67}},"type":"binary-expr","locations":[{"start":{"line":61,"column":31},"end":{"line":61,"column":46}},{"start":{"line":61,"column":50},"end":{"line":61,"column":67}}],"line":61},"12":{"loc":{"start":{"line":62,"column":31},"end":{"line":62,"column":57}},"type":"binary-expr","locations":[{"start":{"line":62,"column":31},"end":{"line":62,"column":51}},{"start":{"line":62,"column":55},"end":{"line":62,"column":57}}],"line":62},"13":{"loc":{"start":{"line":66,"column":20},"end":{"line":66,"column":84}},"type":"binary-expr","locations":[{"start":{"line":66,"column":20},"end":{"line":66,"column":43}},{"start":{"line":66,"column":47},"end":{"line":66,"column":67}},{"start":{"line":66,"column":71},"end":{"line":66,"column":84}}],"line":66},"14":{"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":101}},"type":"binary-expr","locations":[{"start":{"line":67,"column":25},"end":{"line":67,"column":52}},{"start":{"line":67,"column":56},"end":{"line":67,"column":80}},{"start":{"line":67,"column":84},"end":{"line":67,"column":101}}],"line":67},"15":{"loc":{"start":{"line":69,"column":25},"end":{"line":69,"column":97}},"type":"binary-expr","locations":[{"start":{"line":69,"column":25},"end":{"line":69,"column":53}},{"start":{"line":69,"column":57},"end":{"line":69,"column":82}},{"start":{"line":69,"column":86},"end":{"line":69,"column":97}}],"line":69},"16":{"loc":{"start":{"line":70,"column":147},"end":{"line":70,"column":336}},"type":"binary-expr","locations":[{"start":{"line":70,"column":148},"end":{"line":70,"column":225}},{"start":{"line":70,"column":231},"end":{"line":70,"column":305}},{"start":{"line":70,"column":310},"end":{"line":70,"column":336}}],"line":70},"17":{"loc":{"start":{"line":70,"column":148},"end":{"line":70,"column":225}},"type":"cond-expr","locations":[{"start":{"line":70,"column":207},"end":{"line":70,"column":213}},{"start":{"line":70,"column":216},"end":{"line":70,"column":225}}],"line":70},"18":{"loc":{"start":{"line":70,"column":148},"end":{"line":70,"column":204}},"type":"binary-expr","locations":[{"start":{"line":70,"column":148},"end":{"line":70,"column":187}},{"start":{"line":70,"column":191},"end":{"line":70,"column":204}}],"line":70},"19":{"loc":{"start":{"line":70,"column":231},"end":{"line":70,"column":305}},"type":"cond-expr","locations":[{"start":{"line":70,"column":287},"end":{"line":70,"column":293}},{"start":{"line":70,"column":296},"end":{"line":70,"column":305}}],"line":70},"20":{"loc":{"start":{"line":70,"column":231},"end":{"line":70,"column":284}},"type":"binary-expr","locations":[{"start":{"line":70,"column":231},"end":{"line":70,"column":267}},{"start":{"line":70,"column":271},"end":{"line":70,"column":284}}],"line":70},"21":{"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":109}},"type":"binary-expr","locations":[{"start":{"line":71,"column":28},"end":{"line":71,"column":59}},{"start":{"line":71,"column":63},"end":{"line":71,"column":91}},{"start":{"line":71,"column":95},"end":{"line":71,"column":109}}],"line":71},"22":{"loc":{"start":{"line":72,"column":25},"end":{"line":72,"column":110}},"type":"binary-expr","locations":[{"start":{"line":72,"column":25},"end":{"line":72,"column":53}},{"start":{"line":72,"column":57},"end":{"line":72,"column":82}},{"start":{"line":72,"column":86},"end":{"line":72,"column":110}}],"line":72},"23":{"loc":{"start":{"line":73,"column":32},"end":{"line":73,"column":125}},"type":"binary-expr","locations":[{"start":{"line":73,"column":32},"end":{"line":73,"column":67}},{"start":{"line":73,"column":71},"end":{"line":73,"column":103}},{"start":{"line":73,"column":107},"end":{"line":73,"column":125}}],"line":73},"24":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"25":{"loc":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},{"start":{"line":94,"column":8},"end":{"line":96,"column":9}}],"line":94},"26":{"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":77}},"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":40}},{"start":{"line":94,"column":44},"end":{"line":94,"column":77}}],"line":94},"27":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"28":{"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":66}},"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":29}},{"start":{"line":97,"column":33},"end":{"line":97,"column":66}}],"line":97},"29":{"loc":{"start":{"line":100,"column":28},"end":{"line":100,"column":170}},"type":"cond-expr","locations":[{"start":{"line":100,"column":88},"end":{"line":100,"column":117}},{"start":{"line":100,"column":120},"end":{"line":100,"column":170}}],"line":100},"30":{"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":84}},"type":"binary-expr","locations":[{"start":{"line":100,"column":29},"end":{"line":100,"column":57}},{"start":{"line":100,"column":61},"end":{"line":100,"column":84}}],"line":100},"31":{"loc":{"start":{"line":104,"column":48},"end":{"line":104,"column":92}},"type":"default-arg","locations":[{"start":{"line":104,"column":69},"end":{"line":104,"column":92}}],"line":104},"32":{"loc":{"start":{"line":106,"column":12},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":112,"column":13}},{"start":{"line":106,"column":12},"end":{"line":112,"column":13}}],"line":106},"33":{"loc":{"start":{"line":106,"column":16},"end":{"line":106,"column":43}},"type":"binary-expr","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":21}},{"start":{"line":106,"column":25},"end":{"line":106,"column":43}}],"line":106},"34":{"loc":{"start":{"line":108,"column":23},"end":{"line":108,"column":106}},"type":"cond-expr","locations":[{"start":{"line":108,"column":81},"end":{"line":108,"column":98}},{"start":{"line":108,"column":101},"end":{"line":108,"column":106}}],"line":108},"35":{"loc":{"start":{"line":126,"column":12},"end":{"line":129,"column":13}},"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":129,"column":13}},{"start":{"line":126,"column":12},"end":{"line":129,"column":13}}],"line":126},"36":{"loc":{"start":{"line":130,"column":12},"end":{"line":131,"column":23}},"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":131,"column":23}},{"start":{"line":130,"column":12},"end":{"line":131,"column":23}}],"line":130},"37":{"loc":{"start":{"line":136,"column":16},"end":{"line":148,"column":17}},"type":"switch","locations":[{"start":{"line":137,"column":20},"end":{"line":139,"column":78}},{"start":{"line":140,"column":20},"end":{"line":142,"column":74}},{"start":{"line":143,"column":20},"end":{"line":145,"column":75}},{"start":{"line":146,"column":20},"end":{"line":147,"column":56}}],"line":136},"38":{"loc":{"start":{"line":157,"column":61},"end":{"line":157,"column":90}},"type":"default-arg","locations":[{"start":{"line":157,"column":74},"end":{"line":157,"column":90}}],"line":157},"39":{"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":107}},"type":"binary-expr","locations":[{"start":{"line":159,"column":32},"end":{"line":159,"column":45}},{"start":{"line":159,"column":49},"end":{"line":159,"column":107}}],"line":159},"40":{"loc":{"start":{"line":162,"column":16},"end":{"line":165,"column":17}},"type":"if","locations":[{"start":{"line":162,"column":16},"end":{"line":165,"column":17}},{"start":{"line":162,"column":16},"end":{"line":165,"column":17}}],"line":162},"41":{"loc":{"start":{"line":171,"column":16},"end":{"line":174,"column":17}},"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":174,"column":17}},{"start":{"line":171,"column":16},"end":{"line":174,"column":17}}],"line":171},"42":{"loc":{"start":{"line":185,"column":16},"end":{"line":188,"column":17}},"type":"if","locations":[{"start":{"line":185,"column":16},"end":{"line":188,"column":17}},{"start":{"line":185,"column":16},"end":{"line":188,"column":17}}],"line":185},"43":{"loc":{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":192,"column":17}},{"start":{"line":189,"column":16},"end":{"line":192,"column":17}}],"line":189},"44":{"loc":{"start":{"line":199,"column":16},"end":{"line":216,"column":17}},"type":"if","locations":[{"start":{"line":199,"column":16},"end":{"line":216,"column":17}},{"start":{"line":199,"column":16},"end":{"line":216,"column":17}}],"line":199},"45":{"loc":{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},"type":"if","locations":[{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},{"start":{"line":228,"column":16},"end":{"line":230,"column":17}}],"line":228},"46":{"loc":{"start":{"line":299,"column":61},"end":{"line":299,"column":83}},"type":"default-arg","locations":[{"start":{"line":299,"column":74},"end":{"line":299,"column":83}}],"line":299},"47":{"loc":{"start":{"line":301,"column":32},"end":{"line":301,"column":107}},"type":"binary-expr","locations":[{"start":{"line":301,"column":32},"end":{"line":301,"column":45}},{"start":{"line":301,"column":49},"end":{"line":301,"column":107}}],"line":301},"48":{"loc":{"start":{"line":305,"column":16},"end":{"line":307,"column":17}},"type":"if","locations":[{"start":{"line":305,"column":16},"end":{"line":307,"column":17}},{"start":{"line":305,"column":16},"end":{"line":307,"column":17}}],"line":305},"49":{"loc":{"start":{"line":305,"column":20},"end":{"line":305,"column":38}},"type":"binary-expr","locations":[{"start":{"line":305,"column":20},"end":{"line":305,"column":25}},{"start":{"line":305,"column":29},"end":{"line":305,"column":38}}],"line":305},"50":{"loc":{"start":{"line":355,"column":23},"end":{"line":355,"column":113}},"type":"binary-expr","locations":[{"start":{"line":355,"column":24},"end":{"line":355,"column":106}},{"start":{"line":355,"column":111},"end":{"line":355,"column":113}}],"line":355},"51":{"loc":{"start":{"line":355,"column":24},"end":{"line":355,"column":106}},"type":"cond-expr","locations":[{"start":{"line":355,"column":87},"end":{"line":355,"column":93}},{"start":{"line":355,"column":96},"end":{"line":355,"column":106}}],"line":355},"52":{"loc":{"start":{"line":355,"column":24},"end":{"line":355,"column":84}},"type":"binary-expr","locations":[{"start":{"line":355,"column":24},"end":{"line":355,"column":67}},{"start":{"line":355,"column":71},"end":{"line":355,"column":84}}],"line":355}},"s":{"0":1,"1":24,"2":0,"3":19,"4":18,"5":18,"6":0,"7":6,"8":6,"9":4,"10":37,"11":19,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":60,"30":29,"31":30,"32":30,"33":30,"34":30,"35":30,"36":30,"37":30,"38":330,"39":30,"40":30,"41":30,"42":30,"43":30,"44":30,"45":30,"46":30,"47":1,"48":29,"49":29,"50":0,"51":29,"52":1,"53":28,"54":28,"55":9,"56":10,"57":35,"58":5,"59":5,"60":30,"61":28,"62":28,"63":28,"64":0,"65":4,"66":4,"67":1,"68":1,"69":3,"70":1,"71":2,"72":2,"73":2,"74":2,"75":1,"76":0,"77":0,"78":1,"79":1,"80":1,"81":2,"82":2,"83":2,"84":1,"85":1,"86":1,"87":0,"88":0,"89":1,"90":1,"91":1,"92":1,"93":0,"94":0,"95":1,"96":1,"97":0,"98":0,"99":0,"100":0,"101":1,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":1,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":1,"116":1,"117":1,"118":2,"119":2,"120":2,"121":1,"122":1,"123":1,"124":0,"125":1,"126":1,"127":2,"128":2,"129":2,"130":1,"131":1,"132":1,"133":2,"134":2,"135":2,"136":1,"137":1,"138":1,"139":2,"140":2,"141":2,"142":1,"143":1,"144":1,"145":3,"146":3,"147":3,"148":2,"149":2,"150":2,"151":2,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":2,"160":1,"161":1,"162":1,"163":2,"164":2,"165":2,"166":1,"167":1,"168":1,"169":1},"f":{"0":19,"1":24,"2":0,"3":19,"4":18,"5":6,"6":37,"7":2,"8":60,"9":29,"10":30,"11":330,"12":9,"13":10,"14":35,"15":28,"16":4,"17":4,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":3,"29":3,"30":1,"31":2,"32":2,"33":2},"b":{"0":[1,1,1],"1":[24,0],"2":[19,19],"3":[13,24],"4":[19,14],"5":[1,1,1],"6":[1,1],"7":[2,2],"8":[60,1],"9":[30,30],"10":[30,0],"11":[30,0],"12":[30,30],"13":[30,30,30],"14":[30,30,30],"15":[30,30,30],"16":[30,1,1],"17":[1,29],"18":[30,30],"19":[0,1],"20":[1,1],"21":[30,29,29],"22":[30,1,1],"23":[30,30,30],"24":[1,29],"25":[0,29],"26":[29,1],"27":[1,28],"28":[29,1],"29":[28,0],"30":[28,28],"31":[6],"32":[5,30],"33":[35,5],"34":[5,0],"35":[1,3],"36":[1,2],"37":[1,0,0,1],"38":[0],"39":[2,2],"40":[0,1],"41":[0,1],"42":[0,1],"43":[0,1],"44":[0,1],"45":[1,0],"46":[0],"47":[3,1],"48":[1,1],"49":[2,1],"50":[1,0],"51":[0,1],"52":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/james/Sites/personal/pullcraft/src/index.ts","sources":["/Users/james/Sites/personal/pullcraft/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import simpleGit from 'simple-git';\nimport { prompt, titleTemplate, bodyTemplate } from './prompt';\nimport { cosmiconfigSync } from 'cosmiconfig';\nimport OpenAI from 'openai';\nimport { ChildProcess, execSync, exec } from 'child_process';\nimport { GitHubClient, OctokitClient, GhClient } from './githubClient';\n\nconst configName = 'pullcraft';\nconst defaultExclusions = [\n  '***package-lock.json',\n  '***pnpm-lock.yaml',\n  '***yarn.lock',\n  '**/*.jpg',\n  '**/*.jpeg',\n  '**/*.png',\n  '**/*.gif',\n  '**/*.bmp',\n  '**/*.tiff',\n  '**/*.svg',\n  '**/*.pdf'\n];\nconst githubStrategy = 'gh';\nconst defaultOpenPr = true;\nconst openaiDefaults = {\n  url: 'https://api.openai.com/v1/chat/completions',\n  model: 'gpt-3.5-turbo-instruct',\n  systemPrompt: prompt,\n  titleTemplate,\n  bodyTemplate,\n  max_tokens: 3000,\n  n: 1,\n  stop: null,\n  temperature: 0.2\n};\nconst baseDefault = 'develop';\nconst placeholderPattern = '__KEY__';\n\nfunction filterUndefined (obj: Record<string, any>): Record<string, any> {\n  return Object.fromEntries(Object.entries(obj || {}).filter(([_, v]) => v !== undefined));\n}\n\nexport class PullCraft {\n  githubToken: string;\n  gitHubClient: GitHubClient;\n  exclusions: string[];\n  openai: any;\n  git: any;\n  config: any;\n  openPr: boolean;\n  githubStrategy: string;\n  openaiConfig: any;\n  baseDefault: string;\n  placeholderPattern: string;\n  commanderOptions: any;\n  replacements: any = {};\n  standardReplacements: any = {};\n\n  constructor (commanderOptions: any) {\n    const explorer = cosmiconfigSync(configName, { searchStrategy: 'global' });\n    const config = explorer.search();\n    const configOptions = config?.config || {};\n    configOptions.openai = configOptions.openai || {};\n\n    // Merge options: commanderOptions > configOptions > defaults\n    // console.log('commanderOptions', commanderOptions);\n    const mergedOptions = {\n      openPr: commanderOptions.openPr || configOptions.openPr || defaultOpenPr,\n      exclusions: (commanderOptions.exclusions || configOptions.exclusions || defaultExclusions)\n        .map((exclusion: string) => `:(exclude)${exclusion}`),\n      baseDefault: commanderOptions.baseDefault || configOptions.baseDefault || baseDefault,\n      openaiConfig: Object.assign(\n        openaiDefaults,\n        filterUndefined(configOptions.openai),\n        filterUndefined(commanderOptions.openai),\n        { apiKey: commanderOptions.openai?.apiKey || configOptions.openai?.apiKey || process.env.OPENAI_API_KEY }\n      ),\n      githubStrategy: commanderOptions.githubStrategy || configOptions.githubStrategy || githubStrategy,\n      githubToken: commanderOptions.githubToken || configOptions.githubToken || process.env.GITHUB_TOKEN,\n      placeholderPattern: commanderOptions.placeholderPattern || configOptions.placeholderPattern || placeholderPattern\n    };\n    // console.log('mergedOptions',\n    //   openaiDefaults,\n    //   configOptions.openai,\n    //   commanderOptions.openai,\n    //   mergedOptions);\n\n    // Assign merged options to instance variables\n    this.openPr = mergedOptions.openPr;\n    this.exclusions = mergedOptions.exclusions;\n    this.baseDefault = mergedOptions.baseDefault;\n    this.openaiConfig = mergedOptions.openaiConfig;\n    this.githubStrategy = mergedOptions.githubStrategy;\n    this.githubToken = mergedOptions.githubToken;\n    this.placeholderPattern = mergedOptions.placeholderPattern;\n\n    // Set the OpenAI API key\n    if (!this.openaiConfig.apiKey) {\n      throw new Error('Error: OPENAI_API_KEY is not set');\n    }\n    this.openai = new OpenAI({ apiKey: this.openaiConfig.apiKey });\n\n    // Set the GitHub client\n    if (this.githubStrategy !== 'gh' && this.githubStrategy !== 'octokit') {\n      throw new Error('Error: githubStrategy must be \\'gh\\' or \\'octokit\\'. Defaults to \\'gh\\'.');\n    }\n    if (!this.githubToken && this.githubStrategy === 'octokit') {\n      throw new Error('Error: GITHUB_TOKEN is not set');\n    }\n    this.gitHubClient = (this.githubStrategy === 'gh' && this.isGhCliAvailable()) ? new GhClient() : new OctokitClient(this.githubToken);\n\n    // Set the Git client\n    this.git = simpleGit();\n  }\n\n  replacePlaceholders (template: string, replacements: any, placeholderPattern = this.placeholderPattern) {\n    return template.replace(\n      new RegExp(\n        Object.keys(replacements).map(key => placeholderPattern.replace('KEY', key)).join('|'), 'g'\n      ), match => {\n        if (match && placeholderPattern) {\n          const key = match.replace(new RegExp(placeholderPattern.replace('KEY', '(.*)')), '$1');\n          return Object.prototype.hasOwnProperty.call(replacements, key) ? replacements[key] : match;\n        } else {\n          return match;\n        }\n      }\n    );\n  }\n\n  isGhCliAvailable () {\n    try {\n      execSync('gh auth status');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  async openUrl (url: string): Promise<ChildProcess|void> {\n    if (!url) {\n      console.error('Error: Please provide a value for the argument.');\n      throw new Error('Error: URL is required');\n    }\n    if (this.openPr === false) return;\n    try {\n      const osType = process.platform;\n      console.log(`Opening URL: ${url} on ${osType}`);\n      // console.log(JSON.stringify({url}, null, 2));\n      switch (osType) {\n        case 'linux':\n          // Linux\n          return exec(`xdg-open \"${url}\"`);\n        case 'darwin':\n          // macOS\n          return exec(`open \"${url}\"`);\n        case 'win32':\n          // Windows\n          return exec(`start \"${url}\"`);\n        default:\n          console.error('Unsupported OS');\n      }\n    } catch (error:any) {\n      console.error(`Error opening URL: ${error.message}`);\n      throw error;\n    }\n  }\n\n  async createPr (baseBranch = this.baseDefault, compareBranch?: string) {\n    try {\n      compareBranch = compareBranch || (await this.git.revparse(['--abbrev-ref', 'HEAD'])).trim() as string;\n      console.log(`Comparing branches: ${baseBranch} and ${compareBranch}`);\n\n      const repoInfo = await this.getRepoInfo();\n      if (!repoInfo) {\n        console.error('Error: Repository information could not be retrieved.');\n        return;\n      }\n      const { owner, repo } = repoInfo;\n\n      this.standardReplacements = {\n        ...this.standardReplacements,\n        owner,\n        repo\n      };\n\n      let response = await this.differ(baseBranch, compareBranch);\n      // console.log('creatPr->differ->response', response);\n      if (!response) {\n        console.error('Error: Response could not be retrieved.');\n        return;\n      }\n      try {\n        response = JSON.parse(response);\n      } catch (error:any) {\n        console.log(error);\n        console.log(JSON.stringify(response));\n        console.error('Error: AI Response could not be parsed.', error.message);\n        return;\n      }\n      const { title, body } = response;\n\n      if (!body) {\n        console.error('Error: PR body could not be retrieved.');\n        return;\n      }\n      if (!title) {\n        console.error('Error: PR title could not be retrieved.');\n        return;\n      }\n\n      const existingPrs = await this.gitHubClient.listPulls({\n        owner,\n        repo,\n        base: baseBranch,\n        head: compareBranch\n      });\n\n      if (existingPrs.length > 0) {\n        const pullNumber = existingPrs[0].number;\n        console.log(`Updating existing PR #${pullNumber}...`);\n        await this.gitHubClient.updatePull({ owner, repo, pullNumber, title, body });\n        await this.openUrl('https://github.com/' + owner + '/' + repo + '/pull/' + pullNumber);\n      } else {\n        console.log('Creating a new PR...');\n        const response = await this.gitHubClient.createPull({\n          owner,\n          repo,\n          title,\n          body,\n          base: baseBranch,\n          head: compareBranch\n        });\n        await this.openUrl(response.data.html_url);\n      }\n    } catch (error: any) {\n      console.error(`Error creating PR: ${error.message}`);\n    }\n  }\n\n  async getRepoInfo (): Promise<{ owner: string, repo: string }> {\n    try {\n      const repoUrl = await this.git.raw(['config', '--get', 'remote.origin.url']);\n      const match = repoUrl.match(/github\\.com[:/](.+?)\\/(.+?)\\.git/);\n      if (match) {\n        return { owner: match[1], repo: match[2] };\n      }\n      throw new Error(`Failed to get repo info from ${repoUrl}`);\n    } catch (error: any) {\n      console.error('Failed to get repo info');\n      throw error;\n    }\n  }\n\n  async getNewFiles (baseBranch: string, compareBranch: string): Promise<string> {\n    try {\n      // console.log('EXLCUSIONS NEW FILES', this.exclusions);\n      const outcome = await this.git.raw([\n        'diff',\n        '--diff-filter=A',\n        baseBranch,\n        compareBranch,\n        '--',\n        '.',\n        ...this.exclusions\n      ]);\n      return outcome;\n    } catch (error: any) {\n      console.error(`Error getting new files: ${error.message}`);\n      throw error;\n    }\n  }\n\n  async getDiff (baseBranch: string, compareBranch: string): Promise<string> {\n    try {\n      // console.log('EXLCUSIONS DIFF', this.exclusions);\n      const outcome = await this.git.raw([\n        'diff',\n        baseBranch,\n        compareBranch,\n        '--',\n        '.',\n        ...this.exclusions\n      ]);\n      return outcome;\n    } catch (error: any) {\n      console.error(`Error getting diff: ${error.message}`);\n      throw error;\n    }\n  }\n\n  async getFilenames (baseBranch: string, compareBranch: string): Promise<string> {\n    try {\n      // console.log('EXLCUSIONS FILENAMES', this.exclusions);\n      const outcome = await this.git.raw([\n        'diff',\n        '--name-only',\n        baseBranch,\n        compareBranch\n      ]);\n      return outcome;\n    } catch (error: any) {\n      console.error(`Error getting filenames: ${error.message}`);\n      throw error;\n    }\n  }\n\n  async differ (baseBranch = 'develop', compareBranch?: string): Promise<any|void> {\n    try {\n      compareBranch = compareBranch || (await this.git.revparse(['--abbrev-ref', 'HEAD'])).trim() as string;\n\n      const diff = await this.getDiff(baseBranch, compareBranch);\n      const newFiles = await this.getNewFiles(baseBranch, compareBranch);\n      const filenames = await this.getFilenames(baseBranch, compareBranch);\n\n      if (!diff && !newFiles) {\n        return 'No changes found between the specified branches.';\n      }\n\n      this.standardReplacements = {\n        ...this.standardReplacements,\n        baseBranch,\n        compareBranch\n      };\n\n      const finalPrompt = this.buildTextPrompt({ diff, newFiles, filenames });\n      // console.log('finalPrompt', finalPrompt);\n      const response = await this.gptCall(finalPrompt);\n      return response;\n    } catch (error: any) {\n      console.error(`Error generating PR body: ${error.message}`);\n    }\n  }\n\n  buildTextPrompt ({ diff, newFiles, filenames }:{ diff: string, newFiles: string, filenames: string }): string {\n    const replace = (template: string) => {\n      return this.replacePlaceholders(template, {\n        ...this.replacements,\n        ...this.standardReplacements\n      }, this.placeholderPattern);\n    };\n    // console.log(this.openaiConfig.titleTemplate, this.openaiConfig.bodyTemplate);\n    const title = replace(this.openaiConfig.titleTemplate);\n    const body = replace(this.openaiConfig.bodyTemplate);\n\n    return `\n        json TEMPLATE:\\n{\\n\n            \"title\": ${title},\\n\n            \"body\": ${body},\\n\n        }\\n\n        \\n--------\\n\n        DIFF:\\n${diff}\n        \\n--------\\n\n        NEW_FILES:\\n${newFiles}\n        \\n--------\\n\n        FILENAMES:\\n${filenames}`;\n  }\n\n  async gptCall (prompt: string) {\n    try {\n      const response = await this.openai.chat.completions.create({\n        model: 'gpt-4-turbo',\n        max_tokens: 1500,\n        n: 1,\n        stop: null,\n        temperature: 0.2,\n        messages: [\n          { role: 'system', content: this.openaiConfig.systemPrompt },\n          { role: 'user', content: prompt }\n        ],\n        response_format: { type: 'json_object' }\n\n      });\n      return response.choices[0].message?.content || '';\n    } catch (error: any) {\n      console.error(`Error calling OpenAI API: ${error.message}`);\n    }\n  }\n}\n\nexport default PullCraft;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e91b799efb88cd45a2e17bb2729fd4869ea34749","contentHash":"d14ceeb28a462cc3c7cce47251f011ac796a72990a45172bc956c81b362e35c0"},"/Users/james/Sites/personal/pullcraft/src/prompt.ts":{"path":"/Users/james/Sites/personal/pullcraft/src/prompt.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":71}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":1157}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":145}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":1750}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/james/Sites/personal/pullcraft/src/prompt.ts","sources":["/Users/james/Sites/personal/pullcraft/src/prompt.ts"],"names":[],"mappings":";;;AAAa,QAAA,MAAM,GAAG,mnCAAmnC,CAAC;AAE7nC,QAAA,aAAa,GAAG,wHAAwH,CAAC;AAEzI,QAAA,YAAY,GAAG,8rDAA8rD,CAAC","sourcesContent":["export const prompt = 'You will be asked to write a concise GitHub PR description based on a provided git diff. Analyze the code changes and provide a concise explanation of the changes, their context and why they were made. Do not treat imports and requires as changes or new features. Be very specific with the title, and be as concise as possible. Reference code, classes, functions, files, etc. as necessary to clarify the purpose of the commit or the changes involved. If the provided message is not a diff respond with an appropriate message. Don\\'t surround your description in backticks but still write GitHub supported markdown. The answer should only include the text of the PR. Don\\'t include starting or ending text because the response will be directly copied into the PR. Be brief and concise. Here is an example of the pull request template. Make sure to write a clear title. The title is required. Title must start with a # and end with two \\\\n\\'s so that it is clearly separated from the rest of the body. Make sure that any necessary escaping is done with backticks or quotes when creating the template. It is CRITICAL that the JSON be valid.';\n\nexport const titleTemplate = '<:build,chore,ci,docs,feat,fix,perf,refactor,style,test>: <TITLE GOES HERE>\\n Example: \"fix: Adds a missing semicolon\"';\n\nexport const bodyTemplate = '### Summary\\n\\n**Type:** [build,chore,ci,cicd,docs,feat,fix,perf,refactor,style,test] (Pick one only and start your PR title with it. Like \\'feat: Adds a new widget\\')\\n\\n* **What kind of change does this PR introduce?** (Bug fix, feature, docs update, ...)\\n\\n* **What is the current behavior?** \\n  * (You can also link to an open issue here)\\n\\n* **What is the new behavior?**\\n  * (if this is a feature change)?\\n\\n* **Does this PR introduce a breaking change?** \\n  * (What changes might users need to make in their application due to this PR?)\\n\\n* **Has Testing been included for this PR?\\n  * description of testing if any\\n\\n### Other Information\\n\\nIf there\\'s anything else that\\'s important and relevant to your pull request, mention that information here. This could include benchmarks, or other information.\\n----\\n\\nFor the list of commit types (build,chore,ci,docs,feat,fix,perf,refactor,style,test), here are explanations of each to help you identify the right tag, ordered from highest priority to lowest. If there are multiple purposes in a PR, choose the one higher on this list.\\n\\n1. feat: A new feature\\n1. fix: A bug fix\\n1. ci: Changes to our CI configuration files and scripts (like .github workflow files, release-it config, etc.)\\n1. build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\\n1. perf: A code change that improves performance\\n1. refactor: A code change that neither fixes a bug nor adds a feature, but reorganizes code.\\n1. test: Adding missing tests or correcting existing tests\\n1. style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\\n1. docs: Documentation only changes';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30e87d020d3b266ac26d9e1cd1415a6df31315eb","contentHash":"105db133600fc40eb982b55827e5698d9448bbc1b3cf5d55b8e8f6a1f97536c0"},"/Users/james/Sites/personal/pullcraft/src/githubClient.ts":{"path":"/Users/james/Sites/personal/pullcraft/src/githubClient.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":73}},"14":{"start":{"line":13,"column":15},"end":{"line":13,"column":39}},"15":{"start":{"line":14,"column":24},"end":{"line":14,"column":48}},"16":{"start":{"line":17,"column":8},"end":{"line":19,"column":11}},"17":{"start":{"line":18,"column":12},"end":{"line":18,"column":47}},"18":{"start":{"line":22,"column":8},"end":{"line":24,"column":11}},"19":{"start":{"line":23,"column":12},"end":{"line":23,"column":47}},"20":{"start":{"line":27,"column":8},"end":{"line":29,"column":11}},"21":{"start":{"line":28,"column":12},"end":{"line":28,"column":47}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":16}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":65}},"25":{"start":{"line":39,"column":8},"end":{"line":41,"column":11}},"26":{"start":{"line":40,"column":12},"end":{"line":40,"column":72}},"27":{"start":{"line":44,"column":8},"end":{"line":46,"column":11}},"28":{"start":{"line":45,"column":12},"end":{"line":45,"column":87}},"29":{"start":{"line":49,"column":8},"end":{"line":51,"column":11}},"30":{"start":{"line":50,"column":12},"end":{"line":50,"column":87}},"31":{"start":{"line":54,"column":0},"end":{"line":54,"column":38}},"32":{"start":{"line":56,"column":4},"end":{"line":56,"column":36}},"33":{"start":{"line":60,"column":8},"end":{"line":63,"column":11}},"34":{"start":{"line":61,"column":27},"end":{"line":61,"column":149}},"35":{"start":{"line":62,"column":12},"end":{"line":62,"column":38}},"36":{"start":{"line":66,"column":8},"end":{"line":70,"column":11}},"37":{"start":{"line":67,"column":33},"end":{"line":67,"column":54}},"38":{"start":{"line":68,"column":32},"end":{"line":68,"column":52}},"39":{"start":{"line":69,"column":12},"end":{"line":69,"column":144}},"40":{"start":{"line":73,"column":8},"end":{"line":78,"column":11}},"41":{"start":{"line":74,"column":33},"end":{"line":74,"column":54}},"42":{"start":{"line":75,"column":32},"end":{"line":75,"column":52}},"43":{"start":{"line":76,"column":27},"end":{"line":76,"column":187}},"44":{"start":{"line":77,"column":12},"end":{"line":77,"column":50}},"45":{"start":{"line":81,"column":0},"end":{"line":81,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":20,"column":5}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":50},"end":{"line":17,"column":51}},"loc":{"start":{"line":17,"column":90},"end":{"line":19,"column":9}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":19},"end":{"line":25,"column":5}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":22,"column":50},"end":{"line":22,"column":51}},"loc":{"start":{"line":22,"column":103},"end":{"line":24,"column":9}},"line":22},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":19},"end":{"line":30,"column":5}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":27,"column":50},"end":{"line":27,"column":51}},"loc":{"start":{"line":27,"column":103},"end":{"line":29,"column":9}},"line":27},"13":{"name":"(anonymous_13)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":29},"end":{"line":37,"column":5}},"line":34},"14":{"name":"(anonymous_14)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":18},"end":{"line":42,"column":5}},"line":38},"15":{"name":"(anonymous_15)","decl":{"start":{"line":39,"column":50},"end":{"line":39,"column":51}},"loc":{"start":{"line":39,"column":90},"end":{"line":41,"column":9}},"line":39},"16":{"name":"(anonymous_16)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":19},"end":{"line":47,"column":5}},"line":43},"17":{"name":"(anonymous_17)","decl":{"start":{"line":44,"column":50},"end":{"line":44,"column":51}},"loc":{"start":{"line":44,"column":103},"end":{"line":46,"column":9}},"line":44},"18":{"name":"(anonymous_18)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":19},"end":{"line":52,"column":5}},"line":48},"19":{"name":"(anonymous_19)","decl":{"start":{"line":49,"column":50},"end":{"line":49,"column":51}},"loc":{"start":{"line":49,"column":103},"end":{"line":51,"column":9}},"line":49},"20":{"name":"escapeShellArg","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":23}},"loc":{"start":{"line":55,"column":29},"end":{"line":57,"column":1}},"line":55},"21":{"name":"(anonymous_21)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":18},"end":{"line":64,"column":5}},"line":59},"22":{"name":"(anonymous_22)","decl":{"start":{"line":60,"column":50},"end":{"line":60,"column":51}},"loc":{"start":{"line":60,"column":90},"end":{"line":63,"column":9}},"line":60},"23":{"name":"(anonymous_23)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":19},"end":{"line":71,"column":5}},"line":65},"24":{"name":"(anonymous_24)","decl":{"start":{"line":66,"column":50},"end":{"line":66,"column":51}},"loc":{"start":{"line":66,"column":103},"end":{"line":70,"column":9}},"line":66},"25":{"name":"(anonymous_25)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":19},"end":{"line":79,"column":5}},"line":72},"26":{"name":"(anonymous_26)","decl":{"start":{"line":73,"column":50},"end":{"line":73,"column":51}},"loc":{"start":{"line":73,"column":103},"end":{"line":78,"column":9}},"line":73}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/james/Sites/personal/pullcraft/src/githubClient.ts","sources":["/Users/james/Sites/personal/pullcraft/src/githubClient.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,wCAAwC;AACxC,iDAAyC;AAEzC,MAAa,YAAY;IACjB,SAAS;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAA4D;YACpG,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAiF;YACvI,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAyF;YAC/I,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC;KAAA;CACF;AAZD,oCAYC;AAED,MAAa,aAAc,SAAQ,YAAY;IAG7C,YAAa,WAAmB;QAC9B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IACpD,CAAC;IAEK,SAAS;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAA4D;YACpG,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAiF;YACvI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7E,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAyF;YAC/I,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7E,CAAC;KAAA;CACF;AAnBD,sCAmBC;AAED,SAAS,cAAc,CAAE,GAAW;IAClC,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClC,CAAC;AAED,MAAa,QAAS,SAAQ,YAAY;IAElC,SAAS;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAA+D;YACvG,MAAM,MAAM,GAAG,IAAA,wBAAQ,EAAC,qBAAqB,KAAK,IAAI,IAAI,WAAW,IAAI,WAAW,IAAI,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC;YACrH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAoF;YAC1I,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YACzC,IAAA,wBAAQ,EAAC,cAAc,UAAU,WAAW,KAAK,IAAI,IAAI,aAAa,YAAY,aAAa,WAAW,GAAG,CAAC,CAAC;QACjH,CAAC;KAAA;IAEK,UAAU;6DAAE,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAA4F;YAClJ,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,MAAM,GAAG,IAAA,wBAAQ,EAAC,uBAAuB,KAAK,IAAI,IAAI,WAAW,IAAI,WAAW,IAAI,aAAa,YAAY,aAAa,WAAW,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC3J,OAAO,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,CAAC;QACxC,CAAC;KAAA;CACF;AAnBD,4BAmBC","sourcesContent":["import { Octokit } from '@octokit/rest';\nimport { execSync } from 'child_process';\n\nexport class GitHubClient {\n  async listPulls ({ owner, repo, base, head }:{owner: string, repo: string, base: string, head: string}): Promise<any> {\n    throw new Error('Not implemented');\n  }\n\n  async updatePull ({ owner, repo, pullNumber, title, body }:{owner: string, repo: string, pullNumber: number, title: string, body: string}) {\n    throw new Error('Not implemented');\n  }\n\n  async createPull ({ owner, repo, base, head, title, body }:{owner: string, repo: string, base: string, head: string, title: string, body: string}): Promise<any> {\n    throw new Error('Not implemented');\n  }\n}\n\nexport class OctokitClient extends GitHubClient {\n  octokit: any;\n\n  constructor (githubToken: string) {\n    super();\n    this.octokit = new Octokit({ auth: githubToken });\n  }\n\n  async listPulls ({ owner, repo, base, head }:{owner: string, repo: string, base: string, head: string}): Promise<any> {\n    return this.octokit.pulls.list({ owner, repo, base, head });\n  }\n\n  async updatePull ({ owner, repo, pullNumber, title, body }:{owner: string, repo: string, pullNumber: number, title: string, body: string}) {\n    return this.octokit.pulls.update({ owner, repo, pullNumber, title, body });\n  }\n\n  async createPull ({ owner, repo, base, head, title, body }:{owner: string, repo: string, base: string, head: string, title: string, body: string}): Promise<any> {\n    return this.octokit.pulls.create({ owner, repo, base, head, title, body });\n  }\n}\n\nfunction escapeShellArg (arg: string): string {\n  return arg.replace(/`/g, '\\\\`');\n}\n\nexport class GhClient extends GitHubClient {\n  static createPull: any;\n  async listPulls ({ owner, repo, base, head }: { owner: string, repo: string, base: string, head: string }): Promise<any> {\n    const result = execSync(`gh pr list --repo ${owner}/${repo} --base ${base} --head ${head} --json number`).toString();\n    return JSON.parse(result);\n  }\n\n  async updatePull ({ owner, repo, pullNumber, title, body }: { owner: string, repo: string, pullNumber: number, title: string, body: string }) {\n    const escapedTitle = escapeShellArg(title);\n    const escapedBody = escapeShellArg(body);\n    execSync(`gh pr edit ${pullNumber} --repo ${owner}/${repo} --title \"${escapedTitle}\" --body \"${escapedBody}\"`);\n  }\n\n  async createPull ({ owner, repo, base, head, title, body }: { owner: string, repo: string, base: string, head: string, title: string, body: string }): Promise<any> {\n    const escapedTitle = escapeShellArg(title);\n    const escapedBody = escapeShellArg(body);\n    const result = execSync(`gh pr create --repo ${owner}/${repo} --base ${base} --head ${head} --title \"${escapedTitle}\" --body \"${escapedBody}\"`).toString();\n    return { data: { html_url: result } };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4e949dca3311990778b710a69ce8158658c981ad","contentHash":"fbed6b4b34cbe0e355332574e4984f540cf15c967fa01f2302f99649c5384552"}}